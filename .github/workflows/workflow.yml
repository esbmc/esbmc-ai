name: Checking
on: push

jobs:
  setup-requirements:
    name: Get Requirements
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      # Setup Python (faster than using Python container)
      - name: Setup Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: "3.11"

      - name: Check out repository code
        uses: actions/checkout@v4.2.2
      
      - name: Install Hatch
        run: python -m pip install --upgrade hatch

      - name: Generate Requirements
        run: python -m hatch dep show requirements > requirements.txt
        
      - name: Upload Requirements
        uses: actions/upload-artifact@v4.4.3
        with:
          name: requirements
          path: requirements.txt


  pylint:
    name: PyLint
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4.2.2

      # Setup Python (faster than using Python container)
      - name: Setup Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: "3.11"

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel

      - name: Install dependencies
        run: |
          pipenv install --deploy --dev

      - name: Pylint on esbmc_ai
        run: |
          pipenv run pylint esbmc_ai

  test:
    name: PyTest
    needs: setup-requirements
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4.2.2

      # Setup Python (faster than using Python container)
      - name: Setup Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: "3.11"

      - name: Download Requirements
        uses: actions/download-artifact@v4.1.8
        with:
          name: requirements
          path: .

      - name: Install Environment
        run: python -m pip install --upgrade pipenv wheel

      - name: Cache Pipenv
        id: cache-pipenv
        uses: actions/cache@v4.1.2
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv install -r requirements.txt
          pipenv lock

      - name: Run test suite
        run: pipenv run pytest -v
